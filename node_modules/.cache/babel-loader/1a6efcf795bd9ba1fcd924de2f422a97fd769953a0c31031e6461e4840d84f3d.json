{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"../Navbar.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Navbar=()=>{const[currentDateTime,setCurrentDateTime]=useState(new Date());useEffect(()=>{const updateDateTime=()=>{setCurrentDateTime(new Date());};const intervalId=setInterval(updateDateTime,1000);return()=>clearInterval(intervalId);},[]);const formattedTime=currentDateTime.toLocaleTimeString([],{hour:\"numeric\",minute:\"2-digit\"});const daysOfWeek=[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];const months=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];const formattedDate=\"\".concat(daysOfWeek[currentDateTime.getDay()],\" \").concat(months[currentDateTime.getMonth()],\" \").concat(currentDateTime.getDate());return/*#__PURE__*/_jsxs(\"div\",{className:\"osx-menu-bar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"pfp\",children:/*#__PURE__*/_jsx(\"img\",{src:\"./images/login.png\",alt:\"Me, Omer\",style:{width:\"30px\",height:\"30px\",borderRadius:\"50%\",objectFit:\"cover\"}})}),/*#__PURE__*/_jsxs(\"div\",{id:\"header\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"#projects\",children:\"Projects\"}),/*#__PURE__*/_jsx(\"a\",{href:\"#garage\",children:\"Garage\"}),/*#__PURE__*/_jsx(\"a\",{href:\"#contact\",children:\"Contact\"}),/*#__PURE__*/_jsx(\"div\",{className:\"date\",children:formattedDate}),/*#__PURE__*/_jsx(\"div\",{className:\"time\",children:formattedTime})]})]});};export default Navbar;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Navbar","currentDateTime","setCurrentDateTime","Date","updateDateTime","intervalId","setInterval","clearInterval","formattedTime","toLocaleTimeString","hour","minute","daysOfWeek","months","formattedDate","concat","getDay","getMonth","getDate","className","children","src","alt","style","width","height","borderRadius","objectFit","id","href"],"sources":["/Users/omer/Local Repo/notomer.github.io/src/Components/navbar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../Navbar.css\"; \n\nconst Navbar = () => {\n  const [currentDateTime, setCurrentDateTime] = useState(new Date());\n\n  useEffect(() => {\n    const updateDateTime = () => {\n      setCurrentDateTime(new Date());\n    };\n\n    const intervalId = setInterval(updateDateTime, 1000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const formattedTime = currentDateTime.toLocaleTimeString([], {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n  });\n\n  const daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  const formattedDate = `${daysOfWeek[currentDateTime.getDay()]} ${\n    months[currentDateTime.getMonth()]\n  } ${currentDateTime.getDate()}`;\n\n  return (\n    <div className=\"osx-menu-bar\">\n      <div className=\"pfp\">\n        <img\n          src={\"./images/login.png\"}\n          alt=\"Me, Omer\"\n          style={{\n            width: \"30px\",\n            height: \"30px\",\n            borderRadius: \"50%\",\n            objectFit: \"cover\",\n          }}\n        />\n      </div>\n      <div id=\"header\">\n        <a href=\"#projects\">Projects</a>\n        <a href=\"#garage\">Garage</a>\n        <a href=\"#contact\">Contact</a>\n        <div className=\"date\">{formattedDate}</div>\n        <div className=\"time\">{formattedTime}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEvB,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnB,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGR,QAAQ,CAAC,GAAI,CAAAS,IAAI,CAAC,CAAC,CAAC,CAElER,SAAS,CAAC,IAAM,CACd,KAAM,CAAAS,cAAc,CAAGA,CAAA,GAAM,CAC3BF,kBAAkB,CAAC,GAAI,CAAAC,IAAI,CAAC,CAAC,CAAC,CAChC,CAAC,CAED,KAAM,CAAAE,UAAU,CAAGC,WAAW,CAACF,cAAc,CAAE,IAAI,CAAC,CAEpD,MAAO,IAAMG,aAAa,CAACF,UAAU,CAAC,CACxC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,aAAa,CAAGP,eAAe,CAACQ,kBAAkB,CAAC,EAAE,CAAE,CAC3DC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,SACV,CAAC,CAAC,CAEF,KAAM,CAAAC,UAAU,CAAG,CAAC,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAC,CACpE,KAAM,CAAAC,MAAM,CAAG,CACb,KAAK,CACL,KAAK,CACL,KAAK,CACL,KAAK,CACL,KAAK,CACL,KAAK,CACL,KAAK,CACL,KAAK,CACL,KAAK,CACL,KAAK,CACL,KAAK,CACL,KAAK,CACN,CAED,KAAM,CAAAC,aAAa,IAAAC,MAAA,CAAMH,UAAU,CAACX,eAAe,CAACe,MAAM,CAAC,CAAC,CAAC,MAAAD,MAAA,CAC3DF,MAAM,CAACZ,eAAe,CAACgB,QAAQ,CAAC,CAAC,CAAC,MAAAF,MAAA,CAChCd,eAAe,CAACiB,OAAO,CAAC,CAAC,CAAE,CAE/B,mBACEnB,KAAA,QAAKoB,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BvB,IAAA,QAAKsB,SAAS,CAAC,KAAK,CAAAC,QAAA,cAClBvB,IAAA,QACEwB,GAAG,CAAE,oBAAqB,CAC1BC,GAAG,CAAC,UAAU,CACdC,KAAK,CAAE,CACLC,KAAK,CAAE,MAAM,CACbC,MAAM,CAAE,MAAM,CACdC,YAAY,CAAE,KAAK,CACnBC,SAAS,CAAE,OACb,CAAE,CACH,CAAC,CACC,CAAC,cACN5B,KAAA,QAAK6B,EAAE,CAAC,QAAQ,CAAAR,QAAA,eACdvB,IAAA,MAAGgC,IAAI,CAAC,WAAW,CAAAT,QAAA,CAAC,UAAQ,CAAG,CAAC,cAChCvB,IAAA,MAAGgC,IAAI,CAAC,SAAS,CAAAT,QAAA,CAAC,QAAM,CAAG,CAAC,cAC5BvB,IAAA,MAAGgC,IAAI,CAAC,UAAU,CAAAT,QAAA,CAAC,SAAO,CAAG,CAAC,cAC9BvB,IAAA,QAAKsB,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAEN,aAAa,CAAM,CAAC,cAC3CjB,IAAA,QAAKsB,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAEZ,aAAa,CAAM,CAAC,EACxC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}