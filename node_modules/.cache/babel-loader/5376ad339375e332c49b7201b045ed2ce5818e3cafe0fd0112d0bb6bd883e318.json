{"ast":null,"code":"var _jsxFileName = \"/Users/omer/Local Repo/notomer.github.io/src/Components/GreetingsCarousel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreetingsCarousel = () => {\n  _s();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const greetings = ['Hello', 'السلام عليكم', 'नमस्ते', 'ਸਤ ਸ੍ਰੀ ਅਕਾਲ', 'Hola', 'Բարեւ', 'สวัสดี', 'こんにちは', '你好', 'Привет', 'Bonjour', 'Ciao', 'Merhaba', 'Szia', 'Hallo', 'Olá', 'Hej', '안녕하세요', 'Γεια σας', 'Ahoj', 'Dia dhuit', 'Salut', 'Здравейте', 'Halo', 'გამარჯობა', 'Buna ziua', 'Здравствуйте', 'Jambo', 'مرحبا', 'Aloha', 'Selamat pagi', 'Xin chào'];\n  const [currentIndex, setCurrentIndex] = useState(0);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const element = document.getElementById('greetings-text');\n\n      // Check if the opacity is 1 before changing the language\n      if (element.style.opacity === '1') {\n        // Fade out\n        element.style.opacity = '0';\n\n        // Wait for the fade out transition to complete (you may adjust the duration)\n        setTimeout(() => {\n          // Change language\n          setCurrentIndex(prevIndex => (prevIndex + 1) % greetings.length);\n\n          // Fade in\n          element.style.opacity = '1';\n        }, 500); // Adjust the time you want the text to stay on screen before changing (in milliseconds)\n      }\n    }, 4000); // Adjust the interval between language changes (in milliseconds)\n\n    // Clear interval on component unmount to avoid memory leaks\n    return () => clearInterval(intervalId);\n  }, [currentIndex, greetings]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"greetings-text\",\n    style: {\n      opacity: '1',\n      transition: 'opacity 0.5s ease-in-out'\n    },\n    children: greetings[currentIndex]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(GreetingsCarousel, \"tPjzCc9H5UuFdWNuAHYoD0K4UOk=\");\n_c = GreetingsCarousel;\nexport default GreetingsCarousel;\nvar _c;\n$RefreshReg$(_c, \"GreetingsCarousel\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GreetingsCarousel","_s","greetings","currentIndex","setCurrentIndex","intervalId","setInterval","element","document","getElementById","style","opacity","setTimeout","prevIndex","length","clearInterval","id","transition","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/omer/Local Repo/notomer.github.io/src/Components/GreetingsCarousel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../App.css';\n\nconst GreetingsCarousel = () => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const greetings = [\n        'Hello',\n        'السلام عليكم',\n        'नमस्ते',\n        'ਸਤ ਸ੍ਰੀ ਅਕਾਲ',\n        'Hola',\n        'Բարեւ',\n        'สวัสดี',\n        'こんにちは',\n        '你好',\n        'Привет',\n        'Bonjour',\n        'Ciao',\n        'Merhaba',\n        'Szia',\n        'Hallo',\n        'Olá',\n        'Hej',\n        '안녕하세요',\n        'Γεια σας',\n        'Ahoj',\n        'Dia dhuit',\n        'Salut',\n        'Здравейте',\n        'Halo',\n        'გამარჯობა',\n        'Buna ziua',\n        'Здравствуйте',\n        'Jambo',\n        'مرحبا',\n        'Aloha',\n        'Selamat pagi',\n        'Xin chào',\n      ];      \n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const element = document.getElementById('greetings-text');\n\n      // Check if the opacity is 1 before changing the language\n      if (element.style.opacity === '1') {\n        // Fade out\n        element.style.opacity = '0';\n\n        // Wait for the fade out transition to complete (you may adjust the duration)\n        setTimeout(() => {\n          // Change language\n          setCurrentIndex((prevIndex) => (prevIndex + 1) % greetings.length);\n\n          // Fade in\n          element.style.opacity = '1';\n        }, 500); // Adjust the time you want the text to stay on screen before changing (in milliseconds)\n      }\n    }, 4000); // Adjust the interval between language changes (in milliseconds)\n\n    // Clear interval on component unmount to avoid memory leaks\n    return () => clearInterval(intervalId);\n  }, [currentIndex, greetings]);\n\n  return (\n    <div id=\"greetings-text\" style={{ opacity: '1', transition: 'opacity 0.5s ease-in-out' }}>\n      {greetings[currentIndex]}\n    </div>\n  );\n};\n\nexport default GreetingsCarousel;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B;EACA,MAAMC,SAAS,GAAG,CACd,OAAO,EACP,cAAc,EACd,QAAQ,EACR,cAAc,EACd,MAAM,EACN,OAAO,EACP,QAAQ,EACR,OAAO,EACP,IAAI,EACJ,QAAQ,EACR,SAAS,EACT,MAAM,EACN,SAAS,EACT,MAAM,EACN,OAAO,EACP,KAAK,EACL,KAAK,EACL,OAAO,EACP,UAAU,EACV,MAAM,EACN,WAAW,EACX,OAAO,EACP,WAAW,EACX,MAAM,EACN,WAAW,EACX,WAAW,EACX,cAAc,EACd,OAAO,EACP,OAAO,EACP,OAAO,EACP,cAAc,EACd,UAAU,CACX;EACL,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,MAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;;MAEzD;MACA,IAAIF,OAAO,CAACG,KAAK,CAACC,OAAO,KAAK,GAAG,EAAE;QACjC;QACAJ,OAAO,CAACG,KAAK,CAACC,OAAO,GAAG,GAAG;;QAE3B;QACAC,UAAU,CAAC,MAAM;UACf;UACAR,eAAe,CAAES,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIX,SAAS,CAACY,MAAM,CAAC;;UAElE;UACAP,OAAO,CAACG,KAAK,CAACC,OAAO,GAAG,GAAG;QAC7B,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;MACX;IACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV;IACA,OAAO,MAAMI,aAAa,CAACV,UAAU,CAAC;EACxC,CAAC,EAAE,CAACF,YAAY,EAAED,SAAS,CAAC,CAAC;EAE7B,oBACEH,OAAA;IAAKiB,EAAE,EAAC,gBAAgB;IAACN,KAAK,EAAE;MAAEC,OAAO,EAAE,GAAG;MAAEM,UAAU,EAAE;IAA2B,CAAE;IAAAC,QAAA,EACtFhB,SAAS,CAACC,YAAY;EAAC;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAACrB,EAAA,CAnEID,iBAAiB;AAAAuB,EAAA,GAAjBvB,iBAAiB;AAqEvB,eAAeA,iBAAiB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}