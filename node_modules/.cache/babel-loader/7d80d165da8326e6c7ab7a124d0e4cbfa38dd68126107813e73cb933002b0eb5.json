{"ast":null,"code":"import React,{useState}from\"react\";import\"../Slideshow.css\";// Import the CSS file\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ProjectCarousel=()=>{const[currentIndex,setCurrentIndex]=useState(0);const images=[{filename:\"images/login.png\",description:\"This Website\",paragraph:\"The goal of this website was to force myself to learn React, I'm not a great at creative work so this took me a while. But I did it, and got to implement solutions in creative ways. My GitHub contains this website, feel free to take a look!\"},{filename:\"images/apple.png\",description:\"My Work at Apple\",paragraph:\"At Apple, I worked on the cloud build platform, streamlining deployment and delivery. I had developed 3 main tools. First, an Error Extraction tool, a tool that automatically extracts build log errors and emails it to the person who kicked off the job. Second, I converted a tool originally which required instalation and setup to be deployed over CLI without the need of adiditonal dependencies. Lastly, i had begun the development of automated AddressSanitizer (aka ASan) installation, ASan is a memory error detector. These roots for iOS builds originally needed to be manually installed, per iOS version, this tool aimed to eliminate that.\"},{filename:\"images/vision.png\",description:\"Machine Learning Work\",paragraph:\"This next chapter I want to focus on Machine Learning. Right now, I've been looking at using coreML Swift framework in my applications. I've also been taking a look at using ML at the gym, my biggest concern is my from being correct, I was inspired by the PoseNet model and am currently researching a development of my own model\"}];const handlePrev=()=>{setCurrentIndex(prevIndex=>prevIndex>0?prevIndex-1:images.length-1);};const handleNext=()=>{setCurrentIndex(prevIndex=>prevIndex<images.length-1?prevIndex+1:0);};return/*#__PURE__*/_jsxs(\"div\",{className:\"image-slider\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"arrow prev-button\",onClick:handlePrev,children:/*#__PURE__*/_jsx(\"img\",{src:\"/images/arrowL.png\",alt:\"Previous\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"slider-container\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"slide-image\",src:\"/\".concat(images[currentIndex].filename),alt:\"Slide \".concat(currentIndex+1)}),/*#__PURE__*/_jsx(\"h3\",{className:\"image-description\",children:images[currentIndex].description}),/*#__PURE__*/_jsx(\"p\",{className:\"image-paragraph\",children:images[currentIndex].paragraph})]}),/*#__PURE__*/_jsx(\"button\",{className:\"arrow next-button\",onClick:handleNext,children:/*#__PURE__*/_jsx(\"img\",{src:\"/images/arrowR.png\",alt:\"Next\"})})]});};export default ProjectCarousel;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","ProjectCarousel","currentIndex","setCurrentIndex","images","filename","description","paragraph","handlePrev","prevIndex","length","handleNext","className","children","onClick","src","alt","concat"],"sources":["/Users/omer/Local Repo/notomer.github.io/src/Components/ProjectCarousel.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../Slideshow.css\"; // Import the CSS file\n\nconst ProjectCarousel = () => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const images = [\n    {\n      filename: \"images/login.png\",\n      description: \"This Website\",\n      paragraph:\n        \"The goal of this website was to force myself to learn React, I'm not a great at creative work so this took me a while. But I did it, and got to implement solutions in creative ways. My GitHub contains this website, feel free to take a look!\",\n    },\n    {\n      filename: \"images/apple.png\",\n      description: \"My Work at Apple\",\n      paragraph:\n        \"At Apple, I worked on the cloud build platform, streamlining deployment and delivery. I had developed 3 main tools. First, an Error Extraction tool, a tool that automatically extracts build log errors and emails it to the person who kicked off the job. Second, I converted a tool originally which required instalation and setup to be deployed over CLI without the need of adiditonal dependencies. Lastly, i had begun the development of automated AddressSanitizer (aka ASan) installation, ASan is a memory error detector. These roots for iOS builds originally needed to be manually installed, per iOS version, this tool aimed to eliminate that.\",\n    },\n    {\n      filename: \"images/vision.png\",\n      description: \"Machine Learning Work\",\n      paragraph:\n        \"This next chapter I want to focus on Machine Learning. Right now, I've been looking at using coreML Swift framework in my applications. I've also been taking a look at using ML at the gym, my biggest concern is my from being correct, I was inspired by the PoseNet model and am currently researching a development of my own model\",\n    },\n  ];\n\n  const handlePrev = () => {\n    setCurrentIndex((prevIndex) =>\n      prevIndex > 0 ? prevIndex - 1 : images.length - 1\n    );\n  };\n\n  const handleNext = () => {\n    setCurrentIndex((prevIndex) =>\n      prevIndex < images.length - 1 ? prevIndex + 1 : 0\n    );\n  };\n\n  return (\n    <div className=\"image-slider\">\n      <button className=\"arrow prev-button\" onClick={handlePrev}>\n        <img src=\"/images/arrowL.png\" alt=\"Previous\" />\n      </button>\n      <div className=\"slider-container\">\n        <img\n          className=\"slide-image\"\n          src={`/${images[currentIndex].filename}`}\n          alt={`Slide ${currentIndex + 1}`}\n        />\n        <h3 className=\"image-description\">\n          {images[currentIndex].description}\n        </h3>\n        <p className=\"image-paragraph\">{images[currentIndex].paragraph}</p>\n      </div>\n      <button className=\"arrow next-button\" onClick={handleNext}>\n        <img src=\"/images/arrowR.png\" alt=\"Next\" />\n      </button>\n    </div>\n  );\n};\n\nexport default ProjectCarousel;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,kBAAkB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE3B,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGP,QAAQ,CAAC,CAAC,CAAC,CAEnD,KAAM,CAAAQ,MAAM,CAAG,CACb,CACEC,QAAQ,CAAE,kBAAkB,CAC5BC,WAAW,CAAE,cAAc,CAC3BC,SAAS,CACP,kPACJ,CAAC,CACD,CACEF,QAAQ,CAAE,kBAAkB,CAC5BC,WAAW,CAAE,kBAAkB,CAC/BC,SAAS,CACP,qoBACJ,CAAC,CACD,CACEF,QAAQ,CAAE,mBAAmB,CAC7BC,WAAW,CAAE,uBAAuB,CACpCC,SAAS,CACP,0UACJ,CAAC,CACF,CAED,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvBL,eAAe,CAAEM,SAAS,EACxBA,SAAS,CAAG,CAAC,CAAGA,SAAS,CAAG,CAAC,CAAGL,MAAM,CAACM,MAAM,CAAG,CAClD,CAAC,CACH,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvBR,eAAe,CAAEM,SAAS,EACxBA,SAAS,CAAGL,MAAM,CAACM,MAAM,CAAG,CAAC,CAAGD,SAAS,CAAG,CAAC,CAAG,CAClD,CAAC,CACH,CAAC,CAED,mBACET,KAAA,QAAKY,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3Bf,IAAA,WAAQc,SAAS,CAAC,mBAAmB,CAACE,OAAO,CAAEN,UAAW,CAAAK,QAAA,cACxDf,IAAA,QAAKiB,GAAG,CAAC,oBAAoB,CAACC,GAAG,CAAC,UAAU,CAAE,CAAC,CACzC,CAAC,cACThB,KAAA,QAAKY,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/Bf,IAAA,QACEc,SAAS,CAAC,aAAa,CACvBG,GAAG,KAAAE,MAAA,CAAMb,MAAM,CAACF,YAAY,CAAC,CAACG,QAAQ,CAAG,CACzCW,GAAG,UAAAC,MAAA,CAAWf,YAAY,CAAG,CAAC,CAAG,CAClC,CAAC,cACFJ,IAAA,OAAIc,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAC9BT,MAAM,CAACF,YAAY,CAAC,CAACI,WAAW,CAC/B,CAAC,cACLR,IAAA,MAAGc,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAET,MAAM,CAACF,YAAY,CAAC,CAACK,SAAS,CAAI,CAAC,EAChE,CAAC,cACNT,IAAA,WAAQc,SAAS,CAAC,mBAAmB,CAACE,OAAO,CAAEH,UAAW,CAAAE,QAAA,cACxDf,IAAA,QAAKiB,GAAG,CAAC,oBAAoB,CAACC,GAAG,CAAC,MAAM,CAAE,CAAC,CACrC,CAAC,EACN,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}