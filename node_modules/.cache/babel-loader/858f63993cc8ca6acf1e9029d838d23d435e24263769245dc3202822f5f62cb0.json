{"ast":null,"code":"var _jsxFileName = \"/Users/omer/Local Repo/notomer.github.io/src/Components/Porsche3d.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { useGLTF, Stage, PresentationControls } from \"@react-three/drei\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Model(props) {\n  _s();\n  const {\n    scene\n  } = useGLTF(\"/Porsche.glb\");\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: scene,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\n_s(Model, \"o+hqw2nGnmzAsiWsKcbG4W2mWg4=\", false, function () {\n  return [useGLTF];\n});\n_c = Model;\nfunction Porsche3d() {\n  _s2();\n  const carRef = useRef();\n  const [rotationEnabled, setRotationEnabled] = useState(true);\n  const [rotation, setRotation] = useState([0, Math.PI / 4., 0]);\n  const handleInteractionStart = () => {\n    setRotationEnabled(true);\n    resetIdleTimer();\n  };\n  const handleInteractionEnd = () => {\n    setRotationEnabled(false);\n  };\n  const resetIdleTimer = () => {\n    clearTimeout(idleTimeout);\n    idleTimeout = setTimeout(() => {\n      setRotationEnabled(true);\n    }, 5000); // Adjust the idle time (in milliseconds) as needed\n  };\n  useEffect(() => {\n    let requestId;\n    let lastTimestamp = 0;\n    let idleTimeout;\n    const updateRotation = timestamp => {\n      const elapsedMilliseconds = timestamp - lastTimestamp;\n      if (rotationEnabled) {\n        const rotationSpeed = 0.001; // Adjust rotation speed as needed\n        setRotation(prevRotation => [prevRotation[0], prevRotation[1] + rotationSpeed * elapsedMilliseconds, prevRotation[2]]);\n      }\n      lastTimestamp = timestamp;\n      requestId = requestAnimationFrame(updateRotation);\n    };\n    if (rotationEnabled) {\n      requestId = requestAnimationFrame(updateRotation);\n    }\n\n    // Initial idle timer setup\n    resetIdleTimer();\n    return () => {\n      cancelAnimationFrame(requestId);\n      clearTimeout(idleTimeout);\n    };\n  }, [rotationEnabled]);\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    dpr: [1, 2],\n    shadows: true,\n    camera: {\n      fov: 45\n    },\n    style: {\n      position: \"absolute\"\n    },\n    onPointerDown: handleInteractionStart,\n    onPointerUp: handleInteractionEnd,\n    onPointerLeave: handleInteractionEnd,\n    children: /*#__PURE__*/_jsxDEV(PresentationControls, {\n      speed: 1.5,\n      global: true,\n      zoom: 0.5,\n      polar: [-0.1, Math.PI / 4.],\n      children: /*#__PURE__*/_jsxDEV(Stage, {\n        environment: \"\",\n        children: /*#__PURE__*/_jsxDEV(Model, {\n          scale: 0.006,\n          ref: carRef,\n          rotation: rotation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s2(Porsche3d, \"1hzn7l1Z3f31fz2YwA2YSdtp4PQ=\");\n_c2 = Porsche3d;\nexport default Porsche3d;\nvar _c, _c2;\n$RefreshReg$(_c, \"Model\");\n$RefreshReg$(_c2, \"Porsche3d\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Canvas","useGLTF","Stage","PresentationControls","jsxDEV","_jsxDEV","Model","props","_s","scene","object","fileName","_jsxFileName","lineNumber","columnNumber","_c","Porsche3d","_s2","carRef","rotationEnabled","setRotationEnabled","rotation","setRotation","Math","PI","handleInteractionStart","resetIdleTimer","handleInteractionEnd","clearTimeout","idleTimeout","setTimeout","requestId","lastTimestamp","updateRotation","timestamp","elapsedMilliseconds","rotationSpeed","prevRotation","requestAnimationFrame","cancelAnimationFrame","dpr","shadows","camera","fov","style","position","onPointerDown","onPointerUp","onPointerLeave","children","speed","global","zoom","polar","environment","scale","ref","_c2","$RefreshReg$"],"sources":["/Users/omer/Local Repo/notomer.github.io/src/Components/Porsche3d.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { useGLTF, Stage, PresentationControls } from \"@react-three/drei\";\n\nfunction Model(props) {\n  const { scene } = useGLTF(\"/Porsche.glb\");\n  return <primitive object={scene} {...props} />;\n}\n\nfunction Porsche3d() {\n  const carRef = useRef();\n  const [rotationEnabled, setRotationEnabled] = useState(true);\n  const [rotation, setRotation] = useState([0, Math.PI / 4., 0]);\n\n  const handleInteractionStart = () => {\n    setRotationEnabled(true);\n    resetIdleTimer();\n  };\n\n  const handleInteractionEnd = () => {\n    setRotationEnabled(false);\n  };\n\n  const resetIdleTimer = () => {\n    clearTimeout(idleTimeout);\n    idleTimeout = setTimeout(() => {\n      setRotationEnabled(true);\n    }, 5000); // Adjust the idle time (in milliseconds) as needed\n  };\n\n  useEffect(() => {\n    let requestId;\n    let lastTimestamp = 0;\n    let idleTimeout;\n\n    const updateRotation = (timestamp) => {\n      const elapsedMilliseconds = timestamp - lastTimestamp;\n\n      if (rotationEnabled) {\n        const rotationSpeed = 0.001; // Adjust rotation speed as needed\n        setRotation((prevRotation) => [\n          prevRotation[0],\n          prevRotation[1] + rotationSpeed * elapsedMilliseconds,\n          prevRotation[2]\n        ]);\n      }\n\n      lastTimestamp = timestamp;\n      requestId = requestAnimationFrame(updateRotation);\n    };\n\n    if (rotationEnabled) {\n      requestId = requestAnimationFrame(updateRotation);\n    }\n\n    // Initial idle timer setup\n    resetIdleTimer();\n\n    return () => {\n      cancelAnimationFrame(requestId);\n      clearTimeout(idleTimeout);\n    };\n  }, [rotationEnabled]);\n\n  return (\n    <Canvas\n      dpr={[1, 2]}\n      shadows\n      camera={{ fov: 45 }}\n      style={{ position: \"absolute\" }}\n      onPointerDown={handleInteractionStart}\n      onPointerUp={handleInteractionEnd}\n      onPointerLeave={handleInteractionEnd}\n    >\n      <PresentationControls speed={1.5} global zoom={0.5} polar={[-0.1, Math.PI / 4.]}>\n        <Stage environment=\"\">\n          <Model\n            scale={0.006}\n            ref={carRef}\n            rotation={rotation}\n          />\n        </Stage>\n      </PresentationControls>\n    </Canvas>\n  );\n}\n\nexport default Porsche3d;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}