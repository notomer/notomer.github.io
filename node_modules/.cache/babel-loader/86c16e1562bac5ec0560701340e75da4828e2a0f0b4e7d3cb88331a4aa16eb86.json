{"ast":null,"code":"var _jsxFileName = \"/Users/omer/Local Repo/notomer.github.io/src/Components/carmodel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { USDZLoader } from 'three-usdz-loader';\nimport { useThree } from 'react-three-fiber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarModel = _ref => {\n  _s();\n  let {\n    usdzFile\n  } = _ref;\n  const {\n    scene\n  } = useThree();\n  const groupRef = useRef();\n  useEffect(() => {\n    const loader = new USDZLoader();\n\n    // Load the USDZ model into the Three.js scene\n    const loadModel = async () => {\n      const loadedModel = await loader.loadFile(usdzFile, groupRef.current);\n\n      // You can perform additional actions with the loaded model if needed\n\n      // Clean up the model from the scene when the component is unmounted\n      return () => {\n        loadedModel.clean();\n      };\n    };\n    loadModel();\n  }, [usdzFile]);\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: groupRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n_s(CarModel, \"qBMhSvklTwvdaWSR3+FcDhYxT24=\", false, function () {\n  return [useThree];\n});\n_c = CarModel;\nexport default CarModel;\nvar _c;\n$RefreshReg$(_c, \"CarModel\");","map":{"version":3,"names":["React","useRef","useEffect","USDZLoader","useThree","jsxDEV","_jsxDEV","CarModel","_ref","_s","usdzFile","scene","groupRef","loader","loadModel","loadedModel","loadFile","current","clean","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/omer/Local Repo/notomer.github.io/src/Components/carmodel.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { USDZLoader } from 'three-usdz-loader';\nimport { useThree } from 'react-three-fiber';\n\nconst CarModel = ({ usdzFile }) => {\n  const { scene } = useThree();\n  const groupRef = useRef();\n\n  useEffect(() => {\n    const loader = new USDZLoader();\n\n    // Load the USDZ model into the Three.js scene\n    const loadModel = async () => {\n      const loadedModel = await loader.loadFile(usdzFile, groupRef.current);\n\n      // You can perform additional actions with the loaded model if needed\n\n      // Clean up the model from the scene when the component is unmounted\n      return () => {\n        loadedModel.clean();\n      };\n    };\n\n    loadModel();\n  }, [usdzFile]);\n\n  return <group ref={groupRef} />;\n};\n\nexport default CarModel;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,QAAQ,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC5B,MAAM;IAAEG;EAAM,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAC5B,MAAMQ,QAAQ,GAAGX,MAAM,CAAC,CAAC;EAEzBC,SAAS,CAAC,MAAM;IACd,MAAMW,MAAM,GAAG,IAAIV,UAAU,CAAC,CAAC;;IAE/B;IACA,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,WAAW,GAAG,MAAMF,MAAM,CAACG,QAAQ,CAACN,QAAQ,EAAEE,QAAQ,CAACK,OAAO,CAAC;;MAErE;;MAEA;MACA,OAAO,MAAM;QACXF,WAAW,CAACG,KAAK,CAAC,CAAC;MACrB,CAAC;IACH,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,oBAAOJ,OAAA;IAAOa,GAAG,EAAEP;EAAS;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjC,CAAC;AAACd,EAAA,CAvBIF,QAAQ;EAAA,QACMH,QAAQ;AAAA;AAAAoB,EAAA,GADtBjB,QAAQ;AAyBd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}