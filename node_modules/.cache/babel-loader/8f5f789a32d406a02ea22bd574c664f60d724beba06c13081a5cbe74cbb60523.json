{"ast":null,"code":"var _jsxFileName = \"/Users/omer/Local Repo/notomer.github.io/src/Components/ProjectCarousel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./Slideshow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageSlider = () => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const images = [{\n    filename: 'images/t-logo.png',\n    description: 'Description for Image 1'\n  }, {\n    filename: 'images/image2.jpg',\n    description: 'Description for Image 2'\n  }, {\n    filename: 'images/image3.jpg',\n    description: 'Description for Image 3'\n  }\n  // Add more image filenames and descriptions as needed\n  ];\n  const handlePrev = () => {\n    setCurrentIndex(prevIndex => prevIndex > 0 ? prevIndex - 1 : images.length - 1);\n  };\n  const handleNext = () => {\n    setCurrentIndex(prevIndex => prevIndex < images.length - 1 ? prevIndex + 1 : 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-slider\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"prev-button\",\n      onClick: handlePrev,\n      children: \"<\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arrow slider-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/${images[currentIndex].filename}` // Reference images from the public folder\n        ,\n        alt: `Slide ${currentIndex + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: images[currentIndex].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next-button\",\n      onClick: handleNext,\n      children: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageSlider, \"tusBbsahUVevXfyh6oH5R6YDC9Q=\");\n_c = ImageSlider;\nexport default ImageSlider;\nvar _c;\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageSlider","_s","currentIndex","setCurrentIndex","images","filename","description","handlePrev","prevIndex","length","handleNext","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/omer/Local Repo/notomer.github.io/src/Components/ProjectCarousel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport \"./Slideshow\"\n\nconst ImageSlider = () => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const images = [\n    { filename: 'images/t-logo.png', description: 'Description for Image 1' },\n    { filename: 'images/image2.jpg', description: 'Description for Image 2' },\n    { filename: 'images/image3.jpg', description: 'Description for Image 3' },\n    // Add more image filenames and descriptions as needed\n  ];\n\n  const handlePrev = () => {\n    setCurrentIndex((prevIndex) => (prevIndex > 0 ? prevIndex - 1 : images.length - 1));\n  };\n\n  const handleNext = () => {\n    setCurrentIndex((prevIndex) => (prevIndex < images.length - 1 ? prevIndex + 1 : 0));\n  };\n\n  return (\n    <div className=\"image-slider\">\n      <button className=\"prev-button\" onClick={handlePrev}>\n        &lt;\n      </button>\n      <div className=\"arrow slider-container\">\n        <img\n          src={`/${images[currentIndex].filename}`} // Reference images from the public folder\n          alt={`Slide ${currentIndex + 1}`}\n        />\n        <p>{images[currentIndex].description}</p>\n      </div>\n      <button className=\"next-button\" onClick={handleNext}>\n        &gt;\n      </button>\n    </div>\n  );\n};\n\nexport default ImageSlider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAMO,MAAM,GAAG,CACb;IAAEC,QAAQ,EAAE,mBAAmB;IAAEC,WAAW,EAAE;EAA0B,CAAC,EACzE;IAAED,QAAQ,EAAE,mBAAmB;IAAEC,WAAW,EAAE;EAA0B,CAAC,EACzE;IAAED,QAAQ,EAAE,mBAAmB;IAAEC,WAAW,EAAE;EAA0B;EACxE;EAAA,CACD;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBJ,eAAe,CAAEK,SAAS,IAAMA,SAAS,GAAG,CAAC,GAAGA,SAAS,GAAG,CAAC,GAAGJ,MAAM,CAACK,MAAM,GAAG,CAAE,CAAC;EACrF,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBP,eAAe,CAAEK,SAAS,IAAMA,SAAS,GAAGJ,MAAM,CAACK,MAAM,GAAG,CAAC,GAAGD,SAAS,GAAG,CAAC,GAAG,CAAE,CAAC;EACrF,CAAC;EAED,oBACET,OAAA;IAAKY,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3Bb,OAAA;MAAQY,SAAS,EAAC,aAAa;MAACE,OAAO,EAAEN,UAAW;MAAAK,QAAA,EAAC;IAErD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTlB,OAAA;MAAKY,SAAS,EAAC,wBAAwB;MAAAC,QAAA,gBACrCb,OAAA;QACEmB,GAAG,EAAG,IAAGd,MAAM,CAACF,YAAY,CAAC,CAACG,QAAS,EAAE,CAAC;QAAA;QAC1Cc,GAAG,EAAG,SAAQjB,YAAY,GAAG,CAAE;MAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACFlB,OAAA;QAAAa,QAAA,EAAIR,MAAM,CAACF,YAAY,CAAC,CAACI;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACNlB,OAAA;MAAQY,SAAS,EAAC,aAAa;MAACE,OAAO,EAAEH,UAAW;MAAAE,QAAA,EAAC;IAErD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAChB,EAAA,CAlCID,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAoCjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}