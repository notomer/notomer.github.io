{"ast":null,"code":"import React,{useRef,useState,useEffect}from\"react\";import{Canvas}from\"@react-three/fiber\";import{useGLTF,Stage,PresentationControls}from\"@react-three/drei\";// Array of model objects with titles and image URLs\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const models=[{url:\"/Porsche.glb\",title:\"My dream car is a 911, this is my next car goal.\",image:\"/911-logo.png\"},{url:\"/Tesla.glb\",title:\"I currently drive a Tesla\",image:\"/t-logo.png\"}];function Model(_ref){let{url,...props}=_ref;const{scene}=useGLTF(url);scene.traverse(child=>{if(child.isMesh){child.castShadow=false;child.receiveShadow=false;if(child.material){child.material.castShadow=false;child.material.receiveShadow=false;}}});return/*#__PURE__*/_jsx(\"primitive\",{object:scene,...props});}function Slideshow(){const carRef=useRef();const[rotationEnabled,setRotationEnabled]=useState(true);const[rotation,setRotation]=useState([0,Math.PI/4,0]);const[currentModelIndex,setCurrentModelIndex]=useState(0);let idleTimeout;const resetIdleTimer=()=>{clearTimeout(idleTimeout);idleTimeout=setTimeout(()=>{setRotationEnabled(true);},5000);};useEffect(()=>{let requestId;let lastTimestamp=0;const updateRotation=timestamp=>{const elapsedMilliseconds=timestamp-lastTimestamp;if(rotationEnabled){const rotationSpeed=0.0001;// Adjust rotation speed as needed\nsetRotation(prevRotation=>[prevRotation[0],prevRotation[1]+rotationSpeed*elapsedMilliseconds,prevRotation[2]]);}lastTimestamp=timestamp;requestId=requestAnimationFrame(updateRotation);};if(rotationEnabled){requestId=requestAnimationFrame(updateRotation);}// Initial idle timer setup\nresetIdleTimer();return()=>{cancelAnimationFrame(requestId);clearTimeout(idleTimeout);};},[rotationEnabled]);const handleNext=()=>{setCurrentModelIndex(prevIndex=>(prevIndex+1)%models.length);};const handlePrev=()=>{setCurrentModelIndex(prevIndex=>(prevIndex-1+models.length)%models.length);};return/*#__PURE__*/_jsxs(\"div\",{className:\"centered-slideshow-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"arrow left-arrow\",onClick:handlePrev,children:\"Back\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"title-container\",children:[models[currentModelIndex].image&&/*#__PURE__*/_jsx(\"img\",{alt:models[currentModelIndex].title,src:models[currentModelIndex].image}),/*#__PURE__*/_jsx(\"p\",{children:models[currentModelIndex].title})]}),/*#__PURE__*/_jsxs(Canvas,{dpr:[1,2],shadows:true,camera:{fov:45},style:{position:\"absolute\",width:\"150px\",height:\"150px\"},children:[/*#__PURE__*/_jsx(\"ambientLight\",{intensity:0.5}),/*#__PURE__*/_jsx(PresentationControls,{speed:1.5,global:true,zoom:1,polar:[-0.1,Math.PI/4],onPointerDown:()=>{setRotationEnabled(true);resetIdleTimer();},onPointerUp:()=>{setRotationEnabled(false);},onPointerLeave:()=>{setRotationEnabled(false);},children:/*#__PURE__*/_jsx(Stage,{environment:\"\",children:/*#__PURE__*/_jsx(Model,{scale:0.001,ref:carRef,rotation:rotation// Use the current model from the array\n,url:models[currentModelIndex].url})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"arrow right-arrow\",onClick:handleNext,children:\"Next\"})]});}export default Slideshow;","map":{"version":3,"names":["React","useRef","useState","useEffect","Canvas","useGLTF","Stage","PresentationControls","jsx","_jsx","jsxs","_jsxs","models","url","title","image","Model","_ref","props","scene","traverse","child","isMesh","castShadow","receiveShadow","material","object","Slideshow","carRef","rotationEnabled","setRotationEnabled","rotation","setRotation","Math","PI","currentModelIndex","setCurrentModelIndex","idleTimeout","resetIdleTimer","clearTimeout","setTimeout","requestId","lastTimestamp","updateRotation","timestamp","elapsedMilliseconds","rotationSpeed","prevRotation","requestAnimationFrame","cancelAnimationFrame","handleNext","prevIndex","length","handlePrev","className","children","onClick","alt","src","dpr","shadows","camera","fov","style","position","width","height","intensity","speed","global","zoom","polar","onPointerDown","onPointerUp","onPointerLeave","environment","scale","ref"],"sources":["/Users/omer/Local Repo/notomer.github.io/src/Components/Slideshow.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { useGLTF, Stage, PresentationControls } from \"@react-three/drei\";\n\n// Array of model objects with titles and image URLs\nconst models = [\n  {\n    url: \"/Porsche.glb\",\n    title: \"My dream car is a 911, this is my next car goal.\",\n    image: \"/911-logo.png\",\n  },\n  {\n    url: \"/Tesla.glb\",\n    title: \"I currently drive a Tesla\",\n    image: \"/t-logo.png\",\n  },\n];\n\nfunction Model({ url, ...props }) {\n  const { scene } = useGLTF(url);\n\n  scene.traverse((child) => {\n    if (child.isMesh) {\n      child.castShadow = false;\n      child.receiveShadow = false;\n      if (child.material) {\n        child.material.castShadow = false;\n        child.material.receiveShadow = false;\n      }\n    }\n  });\n\n  return <primitive object={scene} {...props} />;\n}\n\nfunction Slideshow() {\n  const carRef = useRef();\n  const [rotationEnabled, setRotationEnabled] = useState(true);\n  const [rotation, setRotation] = useState([0, Math.PI / 4, 0]);\n  const [currentModelIndex, setCurrentModelIndex] = useState(0);\n\n  let idleTimeout;\n\n  const resetIdleTimer = () => {\n    clearTimeout(idleTimeout);\n    idleTimeout = setTimeout(() => {\n      setRotationEnabled(true);\n    }, 5000);\n  };\n\n  useEffect(() => {\n    let requestId;\n    let lastTimestamp = 0;\n\n    const updateRotation = (timestamp) => {\n      const elapsedMilliseconds = timestamp - lastTimestamp;\n\n      if (rotationEnabled) {\n        const rotationSpeed = 0.0001; // Adjust rotation speed as needed\n        setRotation((prevRotation) => [\n          prevRotation[0],\n          prevRotation[1] + rotationSpeed * elapsedMilliseconds,\n          prevRotation[2],\n        ]);\n      }\n\n      lastTimestamp = timestamp;\n      requestId = requestAnimationFrame(updateRotation);\n    };\n\n    if (rotationEnabled) {\n      requestId = requestAnimationFrame(updateRotation);\n    }\n\n    // Initial idle timer setup\n    resetIdleTimer();\n\n    return () => {\n      cancelAnimationFrame(requestId);\n      clearTimeout(idleTimeout);\n    };\n  }, [rotationEnabled]);\n\n  const handleNext = () => {\n    setCurrentModelIndex((prevIndex) => (prevIndex + 1) % models.length);\n  };\n\n  const handlePrev = () => {\n    setCurrentModelIndex(\n      (prevIndex) => (prevIndex - 1 + models.length) % models.length\n    );\n  };\n\n  return (\n    <div className=\"centered-slideshow-container\">\n      <div className=\"arrow left-arrow\" onClick={handlePrev}>\n        {\"Back\"}\n      </div>\n      <div className=\"title-container\">\n        {models[currentModelIndex].image && (\n          <img\n            alt={models[currentModelIndex].title}\n            src={models[currentModelIndex].image}\n          />\n        )}\n        <p>{models[currentModelIndex].title}</p>\n      </div>\n      <Canvas\n        dpr={[1, 2]}\n        shadows\n        camera={{ fov: 45 }}\n        style={{\n          position: \"absolute\",\n          width: \"150px\",\n          height: \"150px\",\n        }}\n      >\n        <ambientLight intensity={0.5} />\n        <PresentationControls\n          speed={1.5}\n          global\n          zoom={1}\n          polar={[-0.1, Math.PI / 4]}\n          onPointerDown={() => {\n            setRotationEnabled(true);\n            resetIdleTimer();\n          }}\n          onPointerUp={() => {\n            setRotationEnabled(false);\n          }}\n          onPointerLeave={() => {\n            setRotationEnabled(false);\n          }}\n        >\n          <Stage environment=\"\">\n            <Model\n              scale={0.001}\n              ref={carRef}\n              rotation={rotation}\n              // Use the current model from the array\n              url={models[currentModelIndex].url}\n            />\n          </Stage>\n        </PresentationControls>\n      </Canvas>\n      <div className=\"arrow right-arrow\" onClick={handleNext}>\n        {\"Next\"}\n      </div>\n    </div>\n  );\n}\n\nexport default Slideshow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}