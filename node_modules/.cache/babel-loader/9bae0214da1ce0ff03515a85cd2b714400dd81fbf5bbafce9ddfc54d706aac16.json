{"ast":null,"code":"var _jsxFileName = \"/Users/omer/Local Repo/notomer.github.io/src/Components/ProjectCarousel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../Slideshow.css\"; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageSlider = () => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const images = [{\n    filename: \"images/login.png\",\n    description: \"This Website\",\n    paragraph: \"The goal of this website was to force myself to learn React, I'm not a great at creative work so this took me a while. But I did it, and got to implement solutions in creative ways. My GitHub contains this website, feel free to take a look!\"\n  }, {\n    filename: \"images/image2.jpg\",\n    description: \"My Work at Apple\",\n    paragraph: \"At Apple, I worked on the cloud build platform, streamlining deployment and delivery. I had developed 3 main tools. First, an Error Extraction tool, a tool that automatically extracts build log errors and emails it to the person who kicked off the job. Second, I converted a tool originally which required instalation and setup to be deployed over CLI without the need of adiditonal dependencies. Lastly, i had begun the development of automated AddressSanitizer (aka ASan) installation, ASan is a memory error detector. These roots for iOS builds originally needed to be manually installed, per iOS version, this tool aimed to eliminate that.\"\n  }, {\n    filename: \"images/image3.jpg\",\n    description: \"Machine Learning Work\",\n    paragraph: \"This next chapter I want to focus on Machine Learning. Right now, I've been looking at using coreML Swift framework in my applications. I've also been taking a look at using ML at the gym, my biggest concern is my from being correct, I was inspired by the PoseNet model and am currently researching a development of my own model\"\n  }];\n  const handlePrev = () => {\n    setCurrentIndex(prevIndex => prevIndex > 0 ? prevIndex - 1 : images.length - 1);\n  };\n  const handleNext = () => {\n    setCurrentIndex(prevIndex => prevIndex < images.length - 1 ? prevIndex + 1 : 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-slider\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"arrow prev-button\",\n      onClick: handlePrev,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/arrowL.png\",\n        alt: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"slide-image\",\n        src: `/${images[currentIndex].filename}`,\n        alt: `Slide ${currentIndex + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"image-description\",\n        children: images[currentIndex].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"image-paragraph\",\n        children: images[currentIndex].paragraph\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"arrow next-button\",\n      onClick: handleNext,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/arrowR.png\",\n        alt: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageSlider, \"tusBbsahUVevXfyh6oH5R6YDC9Q=\");\n_c = ImageSlider;\nexport default ImageSlider;\nvar _c;\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageSlider","_s","currentIndex","setCurrentIndex","images","filename","description","paragraph","handlePrev","prevIndex","length","handleNext","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/omer/Local Repo/notomer.github.io/src/Components/ProjectCarousel.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../Slideshow.css\"; // Import the CSS file\n\nconst ImageSlider = () => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const images = [\n    { filename: \"images/login.png\", description: \"This Website\", paragraph: \"The goal of this website was to force myself to learn React, I'm not a great at creative work so this took me a while. But I did it, and got to implement solutions in creative ways. My GitHub contains this website, feel free to take a look!\" },\n    { filename: \"images/image2.jpg\", description: \"My Work at Apple\", paragraph: \"At Apple, I worked on the cloud build platform, streamlining deployment and delivery. I had developed 3 main tools. First, an Error Extraction tool, a tool that automatically extracts build log errors and emails it to the person who kicked off the job. Second, I converted a tool originally which required instalation and setup to be deployed over CLI without the need of adiditonal dependencies. Lastly, i had begun the development of automated AddressSanitizer (aka ASan) installation, ASan is a memory error detector. These roots for iOS builds originally needed to be manually installed, per iOS version, this tool aimed to eliminate that.\" },\n    { filename: \"images/image3.jpg\", description: \"Machine Learning Work\", paragraph: \"This next chapter I want to focus on Machine Learning. Right now, I've been looking at using coreML Swift framework in my applications. I've also been taking a look at using ML at the gym, my biggest concern is my from being correct, I was inspired by the PoseNet model and am currently researching a development of my own model\" },\n  ];\n\n  const handlePrev = () => {\n    setCurrentIndex((prevIndex) => (prevIndex > 0 ? prevIndex - 1 : images.length - 1));\n  };\n\n  const handleNext = () => {\n    setCurrentIndex((prevIndex) => (prevIndex < images.length - 1 ? prevIndex + 1 : 0));\n  };\n\n  return (\n    <div className=\"image-slider\">\n      <button className=\"arrow prev-button\" onClick={handlePrev}>\n        <img src=\"/images/arrowL.png\" alt=\"Previous\" />\n      </button>\n      <div className=\"slider-container\">\n        <img className=\"slide-image\"\n          src={`/${images[currentIndex].filename}`}\n          alt={`Slide ${currentIndex + 1}`}\n        />\n        <h3 className=\"image-description\">{images[currentIndex].description}</h3>\n        <p className=\"image-paragraph\">{images[currentIndex].paragraph}</p>\n      </div>\n      <button className=\"arrow next-button\" onClick={handleNext}>\n        <img src=\"/images/arrowR.png\" alt=\"Next\" />\n      </button>\n    </div>\n  );\n};\n\nexport default ImageSlider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}