{"ast":null,"code":"var _jsxFileName = \"/Users/omer/Local Repo/notomer.github.io/src/Components/navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [currentDateTime, setCurrentDateTime] = useState(new Date());\n  useEffect(() => {\n    const updateDateTime = () => {\n      setCurrentDateTime(new Date());\n    };\n    const intervalId = setInterval(updateDateTime, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const formattedTime = currentDateTime.toLocaleTimeString([], {\n    hour: \"numeric\",\n    minute: \"2-digit\"\n  });\n  const daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const formattedDate = `${daysOfWeek[currentDateTime.getDay()]} ${months[currentDateTime.getMonth()]} ${currentDateTime.getDate()}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"osx-menu-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pfp\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./images/login.png\",\n        alt: \"Me, Omer\",\n        style: {\n          width: \"30px\",\n          height: \"30px\",\n          borderRadius: \"50%\",\n          objectFit: \"cover\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#projects\",\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#garage\",\n        children: \"Garage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#contact\",\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: formattedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: formattedTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"BKM6svc5X+6Po/HP9ygVfqubEbg=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Navbar","_s","currentDateTime","setCurrentDateTime","Date","updateDateTime","intervalId","setInterval","clearInterval","formattedTime","toLocaleTimeString","hour","minute","daysOfWeek","months","formattedDate","getDay","getMonth","getDate","className","children","src","alt","style","width","height","borderRadius","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","id","href","_c","$RefreshReg$"],"sources":["/Users/omer/Local Repo/notomer.github.io/src/Components/navbar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Navbar = () => {\n  const [currentDateTime, setCurrentDateTime] = useState(new Date());\n\n  useEffect(() => {\n    const updateDateTime = () => {\n      setCurrentDateTime(new Date());\n    };\n\n    const intervalId = setInterval(updateDateTime, 1000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const formattedTime = currentDateTime.toLocaleTimeString([], {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n  });\n\n  const daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  const formattedDate = `${daysOfWeek[currentDateTime.getDay()]} ${\n    months[currentDateTime.getMonth()]\n  } ${currentDateTime.getDate()}`;\n\n  return (\n    <div className=\"osx-menu-bar\">\n      <div className=\"pfp\">\n        <img\n          src={\"./images/login.png\"}\n          alt=\"Me, Omer\"\n          style={{\n            width: \"30px\",\n            height: \"30px\",\n            borderRadius: \"50%\",\n            objectFit: \"cover\",\n          }}\n        />\n      </div>\n      <div id=\"header\">\n        <a href=\"#projects\">Projects</a>\n        <a href=\"#garage\">Garage</a>\n        <a href=\"#contact\">Contact</a>\n        <div className=\"date\">{formattedDate}</div>\n        <div className=\"time\">{formattedTime}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAAC;EAElEP,SAAS,CAAC,MAAM;IACd,MAAMQ,cAAc,GAAGA,CAAA,KAAM;MAC3BF,kBAAkB,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IAChC,CAAC;IAED,MAAME,UAAU,GAAGC,WAAW,CAACF,cAAc,EAAE,IAAI,CAAC;IAEpD,OAAO,MAAMG,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,aAAa,GAAGP,eAAe,CAACQ,kBAAkB,CAAC,EAAE,EAAE;IAC3DC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EACpE,MAAMC,MAAM,GAAG,CACb,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;EAED,MAAMC,aAAa,GAAI,GAAEF,UAAU,CAACX,eAAe,CAACc,MAAM,CAAC,CAAC,CAAE,IAC5DF,MAAM,CAACZ,eAAe,CAACe,QAAQ,CAAC,CAAC,CAClC,IAAGf,eAAe,CAACgB,OAAO,CAAC,CAAE,EAAC;EAE/B,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BrB,OAAA;MAAKoB,SAAS,EAAC,KAAK;MAAAC,QAAA,eAClBrB,OAAA;QACEsB,GAAG,EAAE,oBAAqB;QAC1BC,GAAG,EAAC,UAAU;QACdC,KAAK,EAAE;UACLC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdC,YAAY,EAAE,KAAK;UACnBC,SAAS,EAAE;QACb;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNhC,OAAA;MAAKiC,EAAE,EAAC,QAAQ;MAAAZ,QAAA,gBACdrB,OAAA;QAAGkC,IAAI,EAAC,WAAW;QAAAb,QAAA,EAAC;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAChChC,OAAA;QAAGkC,IAAI,EAAC,SAAS;QAAAb,QAAA,EAAC;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC5BhC,OAAA;QAAGkC,IAAI,EAAC,UAAU;QAAAb,QAAA,EAAC;MAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9BhC,OAAA;QAAKoB,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEL;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3ChC,OAAA;QAAKoB,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEX;MAAa;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA7DID,MAAM;AAAAkC,EAAA,GAANlC,MAAM;AA+DZ,eAAeA,MAAM;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}