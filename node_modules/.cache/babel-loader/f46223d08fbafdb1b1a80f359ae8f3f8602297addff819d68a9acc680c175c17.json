{"ast":null,"code":"import React,{useState}from\"react\";import\"../Slideshow.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ProjectCarousel=()=>{const[currentIndex,setCurrentIndex]=useState(0);const images=[{filename:\"images/login.png\",description:\"This Website\",paragraph:\"The goal of this website was to force myself to learn React, I'm not a great at creative work so this took me a while. But I did it, and got to implement solutions in creative ways. My GitHub contains this website, feel free to take a look!\"},{filename:\"images/apple.png\",description:\"My Work at Apple\",paragraph:\"At Apple, I worked on the cloud build platform, streamlining deployment and delivery. I had developed 3 main tools. Firstly, a clang & compiler error extraction tool, that automatically detects and finds build warnings and errors and emails the code author based on their compilation flags and build requirements. Second, I converted a command line tool originally which required complicated installation steps and setup to be deployed over CLI without the need of additional dependencies by using a trampoline command and self-contained dependency resolution. Lastly, i had begun the development of automated AddressSanitizer (aka ASan) installation, ASan is a memory error detector. These roots for iOS builds originally needed to be manually installed, per iOS version, this tool aimed to eliminate that.\"},{filename:\"images/vision.png\",description:\"Machine Learning Work\",paragraph:\"At Apple, I worked on the cloud build platform, streamlining deployment and delivery. I developed three main tools. Firstly, a Clang and compiler error extraction tool that automatically detects and finds build warnings and errors and emails the code author based on their compilation flags and build requirements. Secondly, I converted a command-line tool, which originally required complicated installation steps and setup, to be deployed over CLI without the need for additional dependencies by using a trampoline command and self-contained dependency resolution. Lastly, I began the development of automated AddressSanitizer (ASan) installation. ASan is a memory error detector, and these roots for iOS builds originally needed to be manually installed per iOS version. This tool aimed to eliminate that.\"}];const handlePrev=()=>{setCurrentIndex(prevIndex=>{const newIndex=prevIndex===0?images.length-1:prevIndex-1;return newIndex;});};const handleNext=()=>{setCurrentIndex(prevIndex=>{const newIndex=prevIndex===images.length-1?0:prevIndex+1;return newIndex;});};console.log(\"currentIndex before return:\",currentIndex);return/*#__PURE__*/_jsxs(\"div\",{className:\"image-slider\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"arrow prev-button\",onClick:handlePrev,children:/*#__PURE__*/_jsx(\"img\",{src:\"/images/arrowL.png\",alt:\"Previous\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"slider-container \".concat(currentIndex===0?'active':''),children:[console.log(\"Rendered with currentIndex:\",currentIndex),/*#__PURE__*/_jsx(\"img\",{className:\"slide-image\",src:\"/\".concat(images[currentIndex].filename),alt:\"Slide \".concat(currentIndex+1)}),/*#__PURE__*/_jsx(\"h3\",{className:\"image-description\",children:images[currentIndex].description}),/*#__PURE__*/_jsx(\"p\",{className:\"image-paragraph\",children:images[currentIndex].paragraph})]}),/*#__PURE__*/_jsx(\"button\",{className:\"arrow next-button\",onClick:handleNext,children:/*#__PURE__*/_jsx(\"img\",{src:\"/images/arrowR.png\",alt:\"Next\"})})]});};export default ProjectCarousel;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","ProjectCarousel","currentIndex","setCurrentIndex","images","filename","description","paragraph","handlePrev","prevIndex","newIndex","length","handleNext","console","log","className","children","onClick","src","alt","concat"],"sources":["/Users/omer/Local Repo/notomer.github.io/src/Components/ProjectCarousel.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../Slideshow.css\"; \n\nconst ProjectCarousel = () => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const images = [\n    {\n      filename: \"images/login.png\",\n      description: \"This Website\",\n      paragraph:\n        \"The goal of this website was to force myself to learn React, I'm not a great at creative work so this took me a while. But I did it, and got to implement solutions in creative ways. My GitHub contains this website, feel free to take a look!\",\n    },\n    {\n      filename: \"images/apple.png\",\n      description: \"My Work at Apple\",\n      paragraph:\n        \"At Apple, I worked on the cloud build platform, streamlining deployment and delivery. I had developed 3 main tools. Firstly, a clang & compiler error extraction tool, that automatically detects and finds build warnings and errors and emails the code author based on their compilation flags and build requirements. Second, I converted a command line tool originally which required complicated installation steps and setup to be deployed over CLI without the need of additional dependencies by using a trampoline command and self-contained dependency resolution. Lastly, i had begun the development of automated AddressSanitizer (aka ASan) installation, ASan is a memory error detector. These roots for iOS builds originally needed to be manually installed, per iOS version, this tool aimed to eliminate that.\",\n    },\n    {\n      filename: \"images/vision.png\",\n      description: \"Machine Learning Work\",\n      paragraph:\n      \"At Apple, I worked on the cloud build platform, streamlining deployment and delivery. I developed three main tools. Firstly, a Clang and compiler error extraction tool that automatically detects and finds build warnings and errors and emails the code author based on their compilation flags and build requirements. Secondly, I converted a command-line tool, which originally required complicated installation steps and setup, to be deployed over CLI without the need for additional dependencies by using a trampoline command and self-contained dependency resolution. Lastly, I began the development of automated AddressSanitizer (ASan) installation. ASan is a memory error detector, and these roots for iOS builds originally needed to be manually installed per iOS version. This tool aimed to eliminate that.\",\n    },\n  ];\n\n  const handlePrev = () => {\n    setCurrentIndex((prevIndex) => {\n      const newIndex = prevIndex === 0 ? images.length - 1 : prevIndex - 1;\n      return newIndex;\n    });\n  };\n  \n  const handleNext = () => {\n    setCurrentIndex((prevIndex) => {\n      const newIndex = prevIndex === images.length - 1 ? 0 : prevIndex + 1;\n      return newIndex;\n    });\n  };\n\n\n  console.log(\"currentIndex before return:\", currentIndex);\n  \n\n  return (\n    <div className=\"image-slider\">\n      <button className=\"arrow prev-button\" onClick={handlePrev}>\n        <img src=\"/images/arrowL.png\" alt=\"Previous\" />\n      </button>\n      <div className={`slider-container ${currentIndex === 0 ? 'active' : ''}`}>\n      {console.log(\"Rendered with currentIndex:\", currentIndex)}\n        <img\n          className=\"slide-image\"\n          src={`/${images[currentIndex].filename}`}\n          alt={`Slide ${currentIndex + 1}`}\n        />\n        <h3 className=\"image-description\">\n          {images[currentIndex].description}\n        </h3>\n        <p className=\"image-paragraph\">{images[currentIndex].paragraph}</p>\n      </div>\n      <button className=\"arrow next-button\" onClick={handleNext}>\n        <img src=\"/images/arrowR.png\" alt=\"Next\" />\n      </button>\n    </div>\n  );\n};\n\nexport default ProjectCarousel;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGP,QAAQ,CAAC,CAAC,CAAC,CAEnD,KAAM,CAAAQ,MAAM,CAAG,CACb,CACEC,QAAQ,CAAE,kBAAkB,CAC5BC,WAAW,CAAE,cAAc,CAC3BC,SAAS,CACP,kPACJ,CAAC,CACD,CACEF,QAAQ,CAAE,kBAAkB,CAC5BC,WAAW,CAAE,kBAAkB,CAC/BC,SAAS,CACP,yyBACJ,CAAC,CACD,CACEF,QAAQ,CAAE,mBAAmB,CAC7BC,WAAW,CAAE,uBAAuB,CACpCC,SAAS,CACT,0yBACF,CAAC,CACF,CAED,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvBL,eAAe,CAAEM,SAAS,EAAK,CAC7B,KAAM,CAAAC,QAAQ,CAAGD,SAAS,GAAK,CAAC,CAAGL,MAAM,CAACO,MAAM,CAAG,CAAC,CAAGF,SAAS,CAAG,CAAC,CACpE,MAAO,CAAAC,QAAQ,CACjB,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAE,UAAU,CAAGA,CAAA,GAAM,CACvBT,eAAe,CAAEM,SAAS,EAAK,CAC7B,KAAM,CAAAC,QAAQ,CAAGD,SAAS,GAAKL,MAAM,CAACO,MAAM,CAAG,CAAC,CAAG,CAAC,CAAGF,SAAS,CAAG,CAAC,CACpE,MAAO,CAAAC,QAAQ,CACjB,CAAC,CAAC,CACJ,CAAC,CAGDG,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEZ,YAAY,CAAC,CAGxD,mBACEF,KAAA,QAAKe,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BlB,IAAA,WAAQiB,SAAS,CAAC,mBAAmB,CAACE,OAAO,CAAET,UAAW,CAAAQ,QAAA,cACxDlB,IAAA,QAAKoB,GAAG,CAAC,oBAAoB,CAACC,GAAG,CAAC,UAAU,CAAE,CAAC,CACzC,CAAC,cACTnB,KAAA,QAAKe,SAAS,qBAAAK,MAAA,CAAsBlB,YAAY,GAAK,CAAC,CAAG,QAAQ,CAAG,EAAE,CAAG,CAAAc,QAAA,EACxEH,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEZ,YAAY,CAAC,cACvDJ,IAAA,QACEiB,SAAS,CAAC,aAAa,CACvBG,GAAG,KAAAE,MAAA,CAAMhB,MAAM,CAACF,YAAY,CAAC,CAACG,QAAQ,CAAG,CACzCc,GAAG,UAAAC,MAAA,CAAWlB,YAAY,CAAG,CAAC,CAAG,CAClC,CAAC,cACFJ,IAAA,OAAIiB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAC9BZ,MAAM,CAACF,YAAY,CAAC,CAACI,WAAW,CAC/B,CAAC,cACLR,IAAA,MAAGiB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAEZ,MAAM,CAACF,YAAY,CAAC,CAACK,SAAS,CAAI,CAAC,EAChE,CAAC,cACNT,IAAA,WAAQiB,SAAS,CAAC,mBAAmB,CAACE,OAAO,CAAEL,UAAW,CAAAI,QAAA,cACxDlB,IAAA,QAAKoB,GAAG,CAAC,oBAAoB,CAACC,GAAG,CAAC,MAAM,CAAE,CAAC,CACrC,CAAC,EACN,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}