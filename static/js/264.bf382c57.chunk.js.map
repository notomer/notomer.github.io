{"version":3,"file":"static/js/264.bf382c57.chunk.js","mappings":"wLAKA,SAASA,EAAMC,GACb,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,GAAQ,gBAc1B,OAXAD,EAAME,UAAUC,IACVA,EAAMC,SACRD,EAAME,YAAa,EACnBF,EAAMG,eAAgB,EAClBH,EAAMI,WACRJ,EAAMI,SAASF,YAAa,EAC5BF,EAAMI,SAASD,eAAgB,GAEnC,KAGKE,EAAAA,EAAAA,KAAA,aAAWC,OAAQT,KAAWD,GACvC,CAiFA,QA/EA,WACE,MAAMW,GAASC,EAAAA,EAAAA,WACRC,EAAiBC,IAAsBC,EAAAA,EAAAA,WAAS,IAChDC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,CAAC,EAAGG,KAAKC,GAAK,EAAI,IAE3D,IAAIC,EAEJ,MAAMC,EAAiBA,KACrBC,aAAaF,GACbA,EAAcG,YAAW,KACvBT,GAAmB,EAAK,GACvB,IAAK,EAoCV,OAjCAU,EAAAA,EAAAA,YAAU,KACR,IAAIC,EACAC,EAAgB,EAEpB,MAAMC,EAAkBC,IACtB,MAAMC,EAAsBD,EAAYF,EAExC,GAAIb,EAAiB,CACnB,MAAMiB,EAAgB,KACtBb,GAAac,GAAiB,CAC5BA,EAAa,GACbA,EAAa,GAAKD,EAAgBD,EAClCE,EAAa,KAEjB,CAEAL,EAAgBE,EAChBH,EAAYO,sBAAsBL,EAAe,EAUnD,OAPId,IACFY,EAAYO,sBAAsBL,IAIpCN,IAEO,KACLY,qBAAqBR,GACrBH,aAAaF,EAAY,CAC1B,GACA,CAACP,KAGFqB,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CACLC,IAAK,CAAC,EAAG,GACTC,SAAO,EACPC,OAAQ,CAAEC,IAAK,IACfC,MAAO,CAAEC,SAAU,YAAaC,SAAA,EAEhCjC,EAAAA,EAAAA,KAAA,gBAAckC,UAAW,MACzBlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAoB,CACnBC,MAAO,IACPC,QAAM,EACNC,KAAM,EACNC,MAAO,EAAE,GAAK9B,KAAKC,GAAK,GACxB8B,cAAeA,KACbnC,GAAmB,GACnBO,GAAgB,EAElB6B,YAAaA,KACXpC,GAAmB,EAAM,EAE3BqC,eAAgBA,KACdrC,GAAmB,EAAM,EACzB4B,UAEFjC,EAAAA,EAAAA,KAAC2C,EAAAA,EAAK,CAACC,YAAY,GAAEX,UACnBjC,EAAAA,EAAAA,KAACV,EAAK,CAACuD,MAAO,KAAQC,IAAK5C,EAAQK,SAAUA,UAKvD,C","sources":["Components/Porsche3d.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { useGLTF, Stage, PresentationControls } from \"@react-three/drei\";\n\n\nfunction Model(props) {\n  const { scene } = useGLTF(\"/Porsche.glb\");\n\n  // Traverse through all children of the scene and disable shadows\n  scene.traverse((child) => {\n    if (child.isMesh) {\n      child.castShadow = false;\n      child.receiveShadow = false;\n      if (child.material) {\n        child.material.castShadow = false;\n        child.material.receiveShadow = false;\n      }\n    }\n  });\n\n  return <primitive object={scene} {...props} />;\n}\n\nfunction Porsche3d() {\n  const carRef = useRef();\n  const [rotationEnabled, setRotationEnabled] = useState(true);\n  const [rotation, setRotation] = useState([0, Math.PI / 4., 0]);\n\n  let idleTimeout;\n\n  const resetIdleTimer = () => {\n    clearTimeout(idleTimeout);\n    idleTimeout = setTimeout(() => {\n      setRotationEnabled(true);\n    }, 5000);\n  };\n\n  useEffect(() => {\n    let requestId;\n    let lastTimestamp = 0;\n\n    const updateRotation = (timestamp) => {\n      const elapsedMilliseconds = timestamp - lastTimestamp;\n\n      if (rotationEnabled) {\n        const rotationSpeed = 0.0001; // Adjust rotation speed as needed\n        setRotation((prevRotation) => [\n          prevRotation[0],\n          prevRotation[1] + rotationSpeed * elapsedMilliseconds,\n          prevRotation[2]\n        ]);\n      }\n\n      lastTimestamp = timestamp;\n      requestId = requestAnimationFrame(updateRotation);\n    };\n\n    if (rotationEnabled) {\n      requestId = requestAnimationFrame(updateRotation);\n    }\n\n    // Initial idle timer setup\n    resetIdleTimer();\n\n    return () => {\n      cancelAnimationFrame(requestId);\n      clearTimeout(idleTimeout);\n    };\n  }, [rotationEnabled]);\n\n  return (\n    <Canvas\n      dpr={[1, 2]}\n      shadows\n      camera={{ fov: 45 }}\n      style={{ position: \"absolute\" }}\n    >\n      <ambientLight intensity={0.5} />\n      <PresentationControls\n        speed={1.5}\n        global\n        zoom={1}\n        polar={[-0.1, Math.PI / 4.]}\n        onPointerDown={() => {\n          setRotationEnabled(true);\n          resetIdleTimer();\n        }}\n        onPointerUp={() => {\n          setRotationEnabled(false);\n        }}\n        onPointerLeave={() => {\n          setRotationEnabled(false);\n        }}\n      >\n        <Stage environment=\"\">\n          <Model scale={0.0006} ref={carRef} rotation={rotation} />\n        </Stage>\n      </PresentationControls>\n    </Canvas>\n  );\n}\n\nexport default Porsche3d;\n"],"names":["Model","props","scene","useGLTF","traverse","child","isMesh","castShadow","receiveShadow","material","_jsx","object","carRef","useRef","rotationEnabled","setRotationEnabled","useState","rotation","setRotation","Math","PI","idleTimeout","resetIdleTimer","clearTimeout","setTimeout","useEffect","requestId","lastTimestamp","updateRotation","timestamp","elapsedMilliseconds","rotationSpeed","prevRotation","requestAnimationFrame","cancelAnimationFrame","_jsxs","Canvas","dpr","shadows","camera","fov","style","position","children","intensity","PresentationControls","speed","global","zoom","polar","onPointerDown","onPointerUp","onPointerLeave","Stage","environment","scale","ref"],"sourceRoot":""}